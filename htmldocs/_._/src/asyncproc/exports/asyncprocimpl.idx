nimTitle	asyncprocimpl	_._/src/asyncproc/exports/asyncprocimpl.html	module src/asyncproc/exports/asyncprocimpl		0
nim	AsyncProc	_._/src/asyncproc/exports/asyncprocimpl.html#AsyncProc	type AsyncProc		16
nim	RunningProcesses	_._/src/asyncproc/exports/asyncprocimpl.html#RunningProcesses	var RunningProcesses		31
nim	start	_._/src/asyncproc/exports/asyncprocimpl.html#start,ProcArgs,seq[string],ProcArgsModifier	proc start(sh: ProcArgs; cmd: seq[string]; argsModifier: ProcArgsModifier): AsyncProc		39
nim	start	_._/src/asyncproc/exports/asyncprocimpl.html#start,ProcArgs,seq[string],set[ProcOption],set[ProcOption]	proc start(sh: ProcArgs; cmd: seq[string]; prefixCmd = none(seq[string]);\n      toAdd: set[ProcOption] = {}; toRemove: set[ProcOption] = {};\n      input = none(AsyncIoBase); output = none(AsyncIoBase);\n      outputErr = none(AsyncIoBase); env = none(ProcEnv);\n      envModifier = none(ProcEnv); workingDir = none(string);\n      processName = none(string); logFn = none(LogFn);\n      onErrorFn = none(OnErrorFn)): AsyncProc		94
nim	wait	_._/src/asyncproc/exports/asyncprocimpl.html#wait,AsyncProc,Future[void]	proc wait(self: AsyncProc; cancelFut: Future[void] = nil): Future[ProcResult]		103
nim	getPid	_._/src/asyncproc/exports/asyncprocimpl.html#getPid,AsyncProc	proc getPid(p: AsyncProc): int		146
nim	running	_._/src/asyncproc/exports/asyncprocimpl.html#running,AsyncProc	proc running(p: AsyncProc): bool		147
nim	suspend	_._/src/asyncproc/exports/asyncprocimpl.html#suspend,AsyncProc	proc suspend(p: AsyncProc)		148
nim	resume	_._/src/asyncproc/exports/asyncprocimpl.html#resume,AsyncProc	proc resume(p: AsyncProc)		149
nim	terminate	_._/src/asyncproc/exports/asyncprocimpl.html#terminate,AsyncProc	proc terminate(p: AsyncProc)		150
nim	kill	_._/src/asyncproc/exports/asyncprocimpl.html#kill,AsyncProc	proc kill(p: AsyncProc)		152
nim	pretty	_._/src/asyncproc/exports/asyncprocimpl.html#pretty,AsyncProc	proc pretty(self: AsyncProc): string		155
nim	run	_._/src/asyncproc/exports/asyncprocimpl.html#run,ProcArgs,seq[string],ProcArgsModifier,Future[void]	proc run(sh: ProcArgs; cmd: seq[string]; argsModifier: ProcArgsModifier;\n    cancelFut: Future[void] = nil): Future[ProcResult]		162
nim	run	_._/src/asyncproc/exports/asyncprocimpl.html#run,ProcArgs,seq[string],set[ProcOption],set[ProcOption],Future[void]	proc run(sh: ProcArgs; cmd: seq[string]; prefixCmd = none(seq[string]);\n    toAdd: set[ProcOption] = {}; toRemove: set[ProcOption] = {};\n    input = none(AsyncIoBase); output = none(AsyncIoBase);\n    outputErr = none(AsyncIoBase); env = none(ProcEnv);\n    envModifier = none(ProcEnv); workingDir = none(string);\n    processName = none(string); logFn = none(LogFn);\n    onErrorFn = none(OnErrorFn); cancelFut: Future[void] = nil): Future[\n    ProcResult]		166
nim	runAssert	_._/src/asyncproc/exports/asyncprocimpl.html#runAssert,ProcArgs,seq[string],ProcArgsModifier,Future[void]	proc runAssert(sh: ProcArgs; cmd: seq[string]; argsModifier: ProcArgsModifier;\n          cancelFut: Future[void] = nil): Future[ProcResult]		176
nim	runAssert	_._/src/asyncproc/exports/asyncprocimpl.html#runAssert,ProcArgs,seq[string],set[ProcOption],set[ProcOption],Future[void]	proc runAssert(sh: ProcArgs; cmd: seq[string]; prefixCmd = none(seq[string]);\n          toAdd: set[ProcOption] = {}; toRemove: set[ProcOption] = {};\n          input = none(AsyncIoBase); output = none(AsyncIoBase);\n          outputErr = none(AsyncIoBase); env = none(ProcEnv);\n          envModifier = none(ProcEnv); workingDir = none(string);\n          processName = none(string); logFn = none(LogFn);\n          onErrorFn = none(OnErrorFn); cancelFut: Future[void] = nil): Future[\n    ProcResult]		180
nim	runDiscard	_._/src/asyncproc/exports/asyncprocimpl.html#runDiscard,ProcArgs,seq[string],ProcArgsModifier,Future[void]	proc runDiscard(sh: ProcArgs; cmd: seq[string]; argsModifier: ProcArgsModifier;\n           cancelFut: Future[void] = nil): Future[void]		190
nim	runDiscard	_._/src/asyncproc/exports/asyncprocimpl.html#runDiscard,ProcArgs,seq[string],set[ProcOption],set[ProcOption],Future[void]	proc runDiscard(sh: ProcArgs; cmd: seq[string]; prefixCmd = none(seq[string]);\n           toAdd: set[ProcOption] = {}; toRemove: set[ProcOption] = {};\n           input = none(AsyncIoBase); output = none(AsyncIoBase);\n           outputErr = none(AsyncIoBase); env = none(ProcEnv);\n           envModifier = none(ProcEnv); workingDir = none(string);\n           processName = none(string); logFn = none(LogFn);\n           onErrorFn = none(OnErrorFn); cancelFut: Future[void] = nil): Future[\n    void]		202
nim	runCheck	_._/src/asyncproc/exports/asyncprocimpl.html#runCheck,ProcArgs,seq[string],ProcArgsModifier,Future[void]	proc runCheck(sh: ProcArgs; cmd: seq[string]; argsModifier: ProcArgsModifier;\n         cancelFut: Future[void] = nil): Future[bool]		212
nim	runCheck	_._/src/asyncproc/exports/asyncprocimpl.html#runCheck,ProcArgs,seq[string],set[ProcOption],set[ProcOption],Future[void]	proc runCheck(sh: ProcArgs; cmd: seq[string]; prefixCmd = none(seq[string]);\n         toAdd: set[ProcOption] = {}; toRemove: set[ProcOption] = {};\n         input = none(AsyncIoBase); output = none(AsyncIoBase);\n         outputErr = none(AsyncIoBase); env = none(ProcEnv);\n         envModifier = none(ProcEnv); workingDir = none(string);\n         processName = none(string); logFn = none(LogFn);\n         onErrorFn = none(OnErrorFn); cancelFut: Future[void] = nil): Future[\n    bool]		222
nim	runGetOutput	_._/src/asyncproc/exports/asyncprocimpl.html#runGetOutput,ProcArgs,seq[string],ProcArgsModifier,Future[void]	proc runGetOutput(sh: ProcArgs; cmd: seq[string]; argsModifier: ProcArgsModifier;\n             cancelFut: Future[void] = nil): Future[string]		232
nim	runGetOutput	_._/src/asyncproc/exports/asyncprocimpl.html#runGetOutput,ProcArgs,seq[string],set[ProcOption],set[ProcOption],Future[void]	proc runGetOutput(sh: ProcArgs; cmd: seq[string]; prefixCmd = none(seq[string]);\n             toAdd: set[ProcOption] = {}; toRemove: set[ProcOption] = {};\n             input = none(AsyncIoBase); output = none(AsyncIoBase);\n             outputErr = none(AsyncIoBase); env = none(ProcEnv);\n             envModifier = none(ProcEnv); workingDir = none(string);\n             processName = none(string); logFn = none(LogFn);\n             onErrorFn = none(OnErrorFn); cancelFut: Future[void] = nil): Future[\n    string]		247
nim	runGetLines	_._/src/asyncproc/exports/asyncprocimpl.html#runGetLines,ProcArgs,seq[string],ProcArgsModifier,Future[void]	proc runGetLines(sh: ProcArgs; cmd: seq[string]; argsModifier: ProcArgsModifier;\n            cancelFut: Future[void] = nil): Future[seq[string]]		257
nim	runGetLines	_._/src/asyncproc/exports/asyncprocimpl.html#runGetLines,ProcArgs,seq[string],set[ProcOption],set[ProcOption],Future[void]	proc runGetLines(sh: ProcArgs; cmd: seq[string]; prefixCmd = none(seq[string]);\n            toAdd: set[ProcOption] = {}; toRemove: set[ProcOption] = {};\n            input = none(AsyncIoBase); output = none(AsyncIoBase);\n            outputErr = none(AsyncIoBase); env = none(ProcEnv);\n            envModifier = none(ProcEnv); workingDir = none(string);\n            processName = none(string); logFn = none(LogFn);\n            onErrorFn = none(OnErrorFn); cancelFut: Future[void] = nil): Future[\n    seq[string]]		263
nim	runGetOutputStream	_._/src/asyncproc/exports/asyncprocimpl.html#runGetOutputStream,ProcArgs,seq[string],ProcArgsModifier,Future[void]	proc runGetOutputStream(sh: ProcArgs; cmd: seq[string];\n                   argsModifier: ProcArgsModifier; cancelFut: Future[void] = nil): (\n    AsyncIoBase, Future[void])		272
nim	runGetOutputStream	_._/src/asyncproc/exports/asyncprocimpl.html#runGetOutputStream,ProcArgs,seq[string],set[ProcOption],set[ProcOption],Future[void]	proc runGetOutputStream(sh: ProcArgs; cmd: seq[string];\n                   prefixCmd = none(seq[string]); toAdd: set[ProcOption] = {};\n                   toRemove: set[ProcOption] = {}; input = none(AsyncIoBase);\n                   output = none(AsyncIoBase); outputErr = none(AsyncIoBase);\n                   env = none(ProcEnv); envModifier = none(ProcEnv);\n                   workingDir = none(string); processName = none(string);\n                   logFn = none(LogFn); onErrorFn = none(OnErrorFn);\n                   cancelFut: Future[void] = nil): (AsyncIoBase, Future[void])		290
nim	runGetStreams	_._/src/asyncproc/exports/asyncprocimpl.html#runGetStreams,ProcArgs,seq[string],ProcArgsModifier,Future[void]	proc runGetStreams(sh: ProcArgs; cmd: seq[string]; argsModifier: ProcArgsModifier;\n              cancelFut: Future[void] = nil): (AsyncIoBase, AsyncIoBase,\n    Future[void])		299
nim	runGetStreams	_._/src/asyncproc/exports/asyncprocimpl.html#runGetStreams,ProcArgs,seq[string],set[ProcOption],set[ProcOption],Future[void]	proc runGetStreams(sh: ProcArgs; cmd: seq[string]; prefixCmd = none(seq[string]);\n              toAdd: set[ProcOption] = {}; toRemove: set[ProcOption] = {};\n              input = none(AsyncIoBase); output = none(AsyncIoBase);\n              outputErr = none(AsyncIoBase); env = none(ProcEnv);\n              envModifier = none(ProcEnv); workingDir = none(string);\n              processName = none(string); logFn = none(LogFn);\n              onErrorFn = none(OnErrorFn); cancelFut: Future[void] = nil): (\n    AsyncIoBase, AsyncIoBase, Future[void])		317
nimgrp	run	_._/src/asyncproc/exports/asyncprocimpl.html#run-procs-all	proc		161
nimgrp	rungetlines	_._/src/asyncproc/exports/asyncprocimpl.html#runGetLines-procs-all	proc		256
nimgrp	rungetstreams	_._/src/asyncproc/exports/asyncprocimpl.html#runGetStreams-procs-all	proc		299
nimgrp	start	_._/src/asyncproc/exports/asyncprocimpl.html#start-procs-all	proc		39
nimgrp	runassert	_._/src/asyncproc/exports/asyncprocimpl.html#runAssert-procs-all	proc		175
nimgrp	rungetoutput	_._/src/asyncproc/exports/asyncprocimpl.html#runGetOutput-procs-all	proc		231
nimgrp	rundiscard	_._/src/asyncproc/exports/asyncprocimpl.html#runDiscard-procs-all	proc		189
nimgrp	runcheck	_._/src/asyncproc/exports/asyncprocimpl.html#runCheck-procs-all	proc		211
nimgrp	rungetoutputstream	_._/src/asyncproc/exports/asyncprocimpl.html#runGetOutputStream-procs-all	proc		272
